{
  "chaoslib-version": "1.5.0",
  "platform": "Darwin-18.0.0-x86_64-i386-64bit",
  "node": "kritika-Saxena.local",
  "experiment": {
    "version": "1.0.0",
    "title": "Experiment with killing a process on system",
    "description": "The process should auto-respawn after being killed.",
    "tags": [
      "process"
    ],
    "controls": [
      {
        "name": "process-related-controls",
        "provider": {
          "type": "python",
          "module": "chaostoolkit_nimble.controllers.process.control"
        }
      }
    ],
    "steady-state-hypothesis": {
      "title": "Process is up and running",
      "probes": [
        {
          "type": "probe",
          "name": "Fetch-process-id",
          "tolerance": true,
          "provider": {
            "module": "chaostoolkit_nimble.core.utils.ha_utils",
            "type": "python",
            "func": "check_process_running",
            "arguments": {
              "component": "MANAGEMENT",
              "process_name": "media_plane_microapp1"
            }
          }
        }
      ]
    },
    "method": [
      {
        "type": "action",
        "name": "Kill-process",
        "provider": {
          "module": "chaostoolkit_nimble.core.utils.ha_utils",
          "type": "python",
          "func": "kill_process",
          "arguments": {
            "component": "MANAGEMENT",
            "process_name": "media_plane_microapp1",
            "num_of_nodes": "1"
          }
        }
      }
    ],
    "dry": false
  },
  "start": "2019-08-05T13:42:10.450632",
  "status": "completed",
  "deviated": false,
  "steady_states": {
    "before": {
      "steady_state_met": true,
      "probes": [
        {
          "activity": {
            "type": "probe",
            "name": "Fetch-process-id",
            "tolerance": true,
            "provider": {
              "module": "chaostoolkit_nimble.core.utils.ha_utils",
              "type": "python",
              "func": "check_process_running",
              "arguments": {
                "component": "MANAGEMENT",
                "process_name": "media_plane_microapp1"
              }
            }
          },
          "output": true,
          "status": "succeeded",
          "start": "2019-08-05T13:42:10.452512",
          "end": "2019-08-05T13:42:10.742304",
          "duration": 0.289792,
          "tolerance_met": true
        }
      ]
    },
    "after": {
      "steady_state_met": true,
      "probes": [
        {
          "activity": {
            "type": "probe",
            "name": "Fetch-process-id",
            "tolerance": true,
            "provider": {
              "module": "chaostoolkit_nimble.core.utils.ha_utils",
              "type": "python",
              "func": "check_process_running",
              "arguments": {
                "component": "MANAGEMENT",
                "process_name": "media_plane_microapp1"
              }
            }
          },
          "output": true,
          "status": "succeeded",
          "start": "2019-08-05T13:44:13.856913",
          "end": "2019-08-05T13:44:13.991240",
          "duration": 0.134327,
          "tolerance_met": true
        }
      ]
    }
  },
  "run": [
    {
      "activity": {
        "type": "action",
        "name": "Kill-process",
        "provider": {
          "module": "chaostoolkit_nimble.core.utils.ha_utils",
          "type": "python",
          "func": "kill_process",
          "arguments": {
            "component": "MANAGEMENT",
            "process_name": "media_plane_microapp1",
            "num_of_nodes": "1"
          }
        }
      },
      "output": "[{'stdout': 'kill -9 6112 6113', 'stderr': '', 'status_code': 0, 'node': '192.168.134.170', 'linux_user': None, 'kerberos_client_user': None, 'comments': None, 'object_diff_response': {'intersection_count': None, 'intersection': None, 'union_count': None, 'union': None, 'lhs_diff_count': None, 'lhs_diff': None, 'rhs_diff_count': None, 'rhs_diff': None, 'lhs_extra_count': None, 'lhs_extra': None, 'rhs_extra_count': None, 'rhs_extra': None, 'mismatches_count': None, 'mismatches': None, 'column_diff_count': None, 'column_diff': None, 'actual_file': None, 'expected_file': None}, 'healthcheck_response': {'test_case_id': None, 'test_description': None, 'failure_reason': [], 'resolution': []}, 'container_id': None}]",
      "status": "succeeded",
      "start": "2019-08-05T13:42:13.751279",
      "end": "2019-08-05T13:42:13.853999",
      "duration": 0.10272
    }
  ],
  "rollbacks": [],
  "end": "2019-08-05T13:44:13.992637",
  "duration": 123.55752611160278
}